{
  "$defs": {
    "()": {
      "isComponent": false,
      "isResource": false,
      "items": false,
      "long_name": "()",
      "prefixItems": [],
      "short_name": "()",
      "type": "array",
      "typeInfo": "Tuple"
    },
    "(avian3d::collision::narrow_phase::NarrowPhaseConfig, avian3d::dynamics::rigid_body::physics_material::DefaultFriction, avian3d::dynamics::rigid_body::physics_material::DefaultRestitution)": {
      "isComponent": false,
      "isResource": false,
      "items": false,
      "long_name": "(avian3d::collision::narrow_phase::NarrowPhaseConfig, avian3d::dynamics::rigid_body::physics_material::DefaultFriction, avian3d::dynamics::rigid_body::physics_material::DefaultRestitution)",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/avian3d::collision::narrow_phase::NarrowPhaseConfig"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/avian3d::dynamics::rigid_body::physics_material::DefaultFriction"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/avian3d::dynamics::rigid_body::physics_material::DefaultRestitution"
          }
        }
      ],
      "short_name": "(NarrowPhaseConfig, DefaultFriction, DefaultRestitution)",
      "type": "array",
      "typeInfo": "Tuple"
    },
    "(avian3d::dynamics::rigid_body::mass_properties::components::Mass, avian3d::dynamics::rigid_body::mass_properties::components::AngularInertia, avian3d::dynamics::rigid_body::mass_properties::components::CenterOfMass, avian3d::dynamics::rigid_body::mass_properties::components::computed::ComputedMass, avian3d::dynamics::rigid_body::mass_properties::components::computed::ComputedAngularInertia, avian3d::dynamics::rigid_body::mass_properties::components::computed::ComputedCenterOfMass, avian3d::dynamics::rigid_body::mass_properties::components::collider::ColliderDensity, avian3d::dynamics::rigid_body::mass_properties::components::collider::ColliderMassProperties, avian3d::dynamics::rigid_body::mass_properties::components::NoAutoMass, avian3d::dynamics::rigid_body::mass_properties::components::NoAutoAngularInertia, avian3d::dynamics::rigid_body::mass_properties::components::NoAutoCenterOfMass)": {
      "isComponent": false,
      "isResource": false,
      "items": false,
      "long_name": "(avian3d::dynamics::rigid_body::mass_properties::components::Mass, avian3d::dynamics::rigid_body::mass_properties::components::AngularInertia, avian3d::dynamics::rigid_body::mass_properties::components::CenterOfMass, avian3d::dynamics::rigid_body::mass_properties::components::computed::ComputedMass, avian3d::dynamics::rigid_body::mass_properties::components::computed::ComputedAngularInertia, avian3d::dynamics::rigid_body::mass_properties::components::computed::ComputedCenterOfMass, avian3d::dynamics::rigid_body::mass_properties::components::collider::ColliderDensity, avian3d::dynamics::rigid_body::mass_properties::components::collider::ColliderMassProperties, avian3d::dynamics::rigid_body::mass_properties::components::NoAutoMass, avian3d::dynamics::rigid_body::mass_properties::components::NoAutoAngularInertia, avian3d::dynamics::rigid_body::mass_properties::components::NoAutoCenterOfMass)",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/avian3d::dynamics::rigid_body::mass_properties::components::Mass"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/avian3d::dynamics::rigid_body::mass_properties::components::AngularInertia"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/avian3d::dynamics::rigid_body::mass_properties::components::CenterOfMass"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/avian3d::dynamics::rigid_body::mass_properties::components::computed::ComputedMass"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/avian3d::dynamics::rigid_body::mass_properties::components::computed::ComputedAngularInertia"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/avian3d::dynamics::rigid_body::mass_properties::components::computed::ComputedCenterOfMass"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/avian3d::dynamics::rigid_body::mass_properties::components::collider::ColliderDensity"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/avian3d::dynamics::rigid_body::mass_properties::components::collider::ColliderMassProperties"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/avian3d::dynamics::rigid_body::mass_properties::components::NoAutoMass"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/avian3d::dynamics::rigid_body::mass_properties::components::NoAutoAngularInertia"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/avian3d::dynamics::rigid_body::mass_properties::components::NoAutoCenterOfMass"
          }
        }
      ],
      "short_name": "(Mass, AngularInertia, CenterOfMass, ComputedMass, ComputedAngularInertia, ComputedCenterOfMass, ColliderDensity, ColliderMassProperties, NoAutoMass, NoAutoAngularInertia, NoAutoCenterOfMass)",
      "type": "array",
      "typeInfo": "Tuple"
    },
    "(bevy_ecs::entity::Entity, bevy_ecs::entity::Entity)": {
      "isComponent": false,
      "isResource": false,
      "items": false,
      "long_name": "(bevy_ecs::entity::Entity, bevy_ecs::entity::Entity)",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/bevy_ecs::entity::Entity"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/bevy_ecs::entity::Entity"
          }
        }
      ],
      "short_name": "(Entity, Entity)",
      "type": "array",
      "typeInfo": "Tuple"
    },
    "(bevy_ecs::entity::Entity, bevy_picking::backend::HitData)": {
      "isComponent": false,
      "isResource": false,
      "items": false,
      "long_name": "(bevy_ecs::entity::Entity, bevy_picking::backend::HitData)",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/bevy_ecs::entity::Entity"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/bevy_picking::backend::HitData"
          }
        }
      ],
      "short_name": "(Entity, HitData)",
      "type": "array",
      "typeInfo": "Tuple"
    },
    "(bevy_time::time::Time<avian3d::schedule::time::Substeps>, avian3d::dynamics::solver::schedule::SubstepCount)": {
      "isComponent": false,
      "isResource": false,
      "items": false,
      "long_name": "(bevy_time::time::Time<avian3d::schedule::time::Substeps>, avian3d::dynamics::solver::schedule::SubstepCount)",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/bevy_time::time::Time<avian3d::schedule::time::Substeps>"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/avian3d::dynamics::solver::schedule::SubstepCount"
          }
        }
      ],
      "short_name": "(Time<Substeps>, SubstepCount)",
      "type": "array",
      "typeInfo": "Tuple"
    },
    "(bevy_transform_interpolation::TranslationEasingState, bevy_transform_interpolation::RotationEasingState, bevy_transform_interpolation::ScaleEasingState, bevy_transform_interpolation::NoTranslationEasing, bevy_transform_interpolation::NoRotationEasing, bevy_transform_interpolation::NoScaleEasing)": {
      "isComponent": false,
      "isResource": false,
      "items": false,
      "long_name": "(bevy_transform_interpolation::TranslationEasingState, bevy_transform_interpolation::RotationEasingState, bevy_transform_interpolation::ScaleEasingState, bevy_transform_interpolation::NoTranslationEasing, bevy_transform_interpolation::NoRotationEasing, bevy_transform_interpolation::NoScaleEasing)",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/bevy_transform_interpolation::TranslationEasingState"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/bevy_transform_interpolation::RotationEasingState"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/bevy_transform_interpolation::ScaleEasingState"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/bevy_transform_interpolation::NoTranslationEasing"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/bevy_transform_interpolation::NoRotationEasing"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/bevy_transform_interpolation::NoScaleEasing"
          }
        }
      ],
      "short_name": "(TranslationEasingState, RotationEasingState, ScaleEasingState, NoTranslationEasing, NoRotationEasing, NoScaleEasing)",
      "type": "array",
      "typeInfo": "Tuple"
    },
    "(bevy_transform_interpolation::extrapolation::TransformExtrapolation, bevy_transform_interpolation::extrapolation::TranslationExtrapolation, bevy_transform_interpolation::extrapolation::RotationExtrapolation)": {
      "isComponent": false,
      "isResource": false,
      "items": false,
      "long_name": "(bevy_transform_interpolation::extrapolation::TransformExtrapolation, bevy_transform_interpolation::extrapolation::TranslationExtrapolation, bevy_transform_interpolation::extrapolation::RotationExtrapolation)",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/bevy_transform_interpolation::extrapolation::TransformExtrapolation"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/bevy_transform_interpolation::extrapolation::TranslationExtrapolation"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/bevy_transform_interpolation::extrapolation::RotationExtrapolation"
          }
        }
      ],
      "short_name": "(TransformExtrapolation, TranslationExtrapolation, RotationExtrapolation)",
      "type": "array",
      "typeInfo": "Tuple"
    },
    "(bevy_transform_interpolation::hermite::TransformHermiteEasing, bevy_transform_interpolation::hermite::TranslationHermiteEasing, bevy_transform_interpolation::hermite::RotationHermiteEasing)": {
      "isComponent": false,
      "isResource": false,
      "items": false,
      "long_name": "(bevy_transform_interpolation::hermite::TransformHermiteEasing, bevy_transform_interpolation::hermite::TranslationHermiteEasing, bevy_transform_interpolation::hermite::RotationHermiteEasing)",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/bevy_transform_interpolation::hermite::TransformHermiteEasing"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/bevy_transform_interpolation::hermite::TranslationHermiteEasing"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/bevy_transform_interpolation::hermite::RotationHermiteEasing"
          }
        }
      ],
      "short_name": "(TransformHermiteEasing, TranslationHermiteEasing, RotationHermiteEasing)",
      "type": "array",
      "typeInfo": "Tuple"
    },
    "(bevy_transform_interpolation::interpolation::TranslationInterpolation, bevy_transform_interpolation::interpolation::RotationInterpolation, bevy_transform_interpolation::interpolation::ScaleInterpolation)": {
      "isComponent": false,
      "isResource": false,
      "items": false,
      "long_name": "(bevy_transform_interpolation::interpolation::TranslationInterpolation, bevy_transform_interpolation::interpolation::RotationInterpolation, bevy_transform_interpolation::interpolation::ScaleInterpolation)",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/bevy_transform_interpolation::interpolation::TranslationInterpolation"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/bevy_transform_interpolation::interpolation::RotationInterpolation"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/bevy_transform_interpolation::interpolation::ScaleInterpolation"
          }
        }
      ],
      "short_name": "(TranslationInterpolation, RotationInterpolation, ScaleInterpolation)",
      "type": "array",
      "typeInfo": "Tuple"
    },
    "(u16, u16)": {
      "isComponent": false,
      "isResource": false,
      "items": false,
      "long_name": "(u16, u16)",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/u16"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/u16"
          }
        }
      ],
      "short_name": "(u16, u16)",
      "type": "array",
      "typeInfo": "Tuple"
    },
    "(u8, u8)": {
      "isComponent": false,
      "isResource": false,
      "items": false,
      "long_name": "(u8, u8)",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/u8"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/u8"
          }
        }
      ],
      "short_name": "(u8, u8)",
      "type": "array",
      "typeInfo": "Tuple"
    },
    "(usize, usize)": {
      "isComponent": false,
      "isResource": false,
      "items": false,
      "long_name": "(usize, usize)",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/usize"
          }
        },
        {
          "type": {
            "$ref": "#/$defs/usize"
          }
        }
      ],
      "short_name": "(usize, usize)",
      "type": "array",
      "typeInfo": "Tuple"
    },
    "[f32; 4]": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/f32"
        }
      },
      "long_name": "[f32; 4]",
      "short_name": "[f32; 4]",
      "type": "array",
      "typeInfo": "Array"
    },
    "[u32; 2]": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/u32"
        }
      },
      "long_name": "[u32; 2]",
      "short_name": "[u32; 2]",
      "type": "array",
      "typeInfo": "Array"
    },
    "[u32; 3]": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/u32"
        }
      },
      "long_name": "[u32; 3]",
      "short_name": "[u32; 3]",
      "type": "array",
      "typeInfo": "Array"
    },
    "alloc::borrow::Cow<str>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "alloc::borrow::Cow<str>",
      "short_name": "Cow<str>",
      "type": "object",
      "typeInfo": "Value"
    },
    "alloc::string::String": {
      "isComponent": false,
      "isResource": false,
      "long_name": "alloc::string::String",
      "short_name": "String",
      "type": "string",
      "typeInfo": "Value"
    },
    "alloc::sync::Arc<bevy_asset::handle::StrongHandle>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "alloc::sync::Arc<bevy_asset::handle::StrongHandle>",
      "short_name": "Arc<StrongHandle>",
      "type": "object",
      "typeInfo": "Value"
    },
    "alloc::vec::Vec<(bevy_ecs::entity::Entity, bevy_ecs::entity::Entity)>": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/(bevy_ecs::entity::Entity, bevy_ecs::entity::Entity)"
        }
      },
      "long_name": "alloc::vec::Vec<(bevy_ecs::entity::Entity, bevy_ecs::entity::Entity)>",
      "short_name": "Vec<(Entity, Entity)>",
      "type": "array",
      "typeInfo": "List"
    },
    "alloc::vec::Vec<(bevy_ecs::entity::Entity, bevy_picking::backend::HitData)>": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/(bevy_ecs::entity::Entity, bevy_picking::backend::HitData)"
        }
      },
      "long_name": "alloc::vec::Vec<(bevy_ecs::entity::Entity, bevy_picking::backend::HitData)>",
      "short_name": "Vec<(Entity, HitData)>",
      "type": "array",
      "typeInfo": "List"
    },
    "alloc::vec::Vec<[u32; 2]>": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/[u32; 2]"
        }
      },
      "long_name": "alloc::vec::Vec<[u32; 2]>",
      "short_name": "Vec<[u32; 2]>",
      "type": "array",
      "typeInfo": "List"
    },
    "alloc::vec::Vec<[u32; 3]>": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/[u32; 3]"
        }
      },
      "long_name": "alloc::vec::Vec<[u32; 3]>",
      "short_name": "Vec<[u32; 3]>",
      "type": "array",
      "typeInfo": "List"
    },
    "alloc::vec::Vec<alloc::string::String>": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/alloc::string::String"
        }
      },
      "long_name": "alloc::vec::Vec<alloc::string::String>",
      "short_name": "Vec<String>",
      "type": "array",
      "typeInfo": "List"
    },
    "alloc::vec::Vec<alloc::vec::Vec<f32>>": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/alloc::vec::Vec<f32>"
        }
      },
      "long_name": "alloc::vec::Vec<alloc::vec::Vec<f32>>",
      "short_name": "Vec<Vec<f32>>",
      "type": "array",
      "typeInfo": "List"
    },
    "alloc::vec::Vec<bevy_animation::TimedAnimationEvent>": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/bevy_animation::TimedAnimationEvent"
        }
      },
      "long_name": "alloc::vec::Vec<bevy_animation::TimedAnimationEvent>",
      "short_name": "Vec<TimedAnimationEvent>",
      "type": "array",
      "typeInfo": "List"
    },
    "alloc::vec::Vec<bevy_animation::transition::AnimationTransition>": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/bevy_animation::transition::AnimationTransition"
        }
      },
      "long_name": "alloc::vec::Vec<bevy_animation::transition::AnimationTransition>",
      "short_name": "Vec<AnimationTransition>",
      "type": "array",
      "typeInfo": "List"
    },
    "alloc::vec::Vec<bevy_ecs::entity::Entity>": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/bevy_ecs::entity::Entity"
        }
      },
      "long_name": "alloc::vec::Vec<bevy_ecs::entity::Entity>",
      "short_name": "Vec<Entity>",
      "type": "array",
      "typeInfo": "List"
    },
    "alloc::vec::Vec<bevy_math::rects::urect::URect>": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/bevy_math::rects::urect::URect"
        }
      },
      "long_name": "alloc::vec::Vec<bevy_math::rects::urect::URect>",
      "short_name": "Vec<URect>",
      "type": "array",
      "typeInfo": "List"
    },
    "alloc::vec::Vec<bevy_pbr::light::Cascade>": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/bevy_pbr::light::Cascade"
        }
      },
      "long_name": "alloc::vec::Vec<bevy_pbr::light::Cascade>",
      "short_name": "Vec<Cascade>",
      "type": "array",
      "typeInfo": "List"
    },
    "alloc::vec::Vec<bevy_text::glyph::PositionedGlyph>": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/bevy_text::glyph::PositionedGlyph"
        }
      },
      "long_name": "alloc::vec::Vec<bevy_text::glyph::PositionedGlyph>",
      "short_name": "Vec<PositionedGlyph>",
      "type": "array",
      "typeInfo": "List"
    },
    "alloc::vec::Vec<bevy_ui::ui_node::GridTrack>": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/bevy_ui::ui_node::GridTrack"
        }
      },
      "long_name": "alloc::vec::Vec<bevy_ui::ui_node::GridTrack>",
      "short_name": "Vec<GridTrack>",
      "type": "array",
      "typeInfo": "List"
    },
    "alloc::vec::Vec<bevy_ui::ui_node::RepeatedGridTrack>": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/bevy_ui::ui_node::RepeatedGridTrack"
        }
      },
      "long_name": "alloc::vec::Vec<bevy_ui::ui_node::RepeatedGridTrack>",
      "short_name": "Vec<RepeatedGridTrack>",
      "type": "array",
      "typeInfo": "List"
    },
    "alloc::vec::Vec<bevy_window::monitor::VideoMode>": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/bevy_window::monitor::VideoMode"
        }
      },
      "long_name": "alloc::vec::Vec<bevy_window::monitor::VideoMode>",
      "short_name": "Vec<VideoMode>",
      "type": "array",
      "typeInfo": "List"
    },
    "alloc::vec::Vec<blenvy::blueprints::animation::AnimationInfo>": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/blenvy::blueprints::animation::AnimationInfo"
        }
      },
      "long_name": "alloc::vec::Vec<blenvy::blueprints::animation::AnimationInfo>",
      "short_name": "Vec<AnimationInfo>",
      "type": "array",
      "typeInfo": "List"
    },
    "alloc::vec::Vec<blenvy::blueprints::assets::BlueprintAsset>": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/blenvy::blueprints::assets::BlueprintAsset"
        }
      },
      "long_name": "alloc::vec::Vec<blenvy::blueprints::assets::BlueprintAsset>",
      "short_name": "Vec<BlueprintAsset>",
      "type": "array",
      "typeInfo": "List"
    },
    "alloc::vec::Vec<blenvy::blueprints::materials::MaterialInfo>": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/blenvy::blueprints::materials::MaterialInfo"
        }
      },
      "long_name": "alloc::vec::Vec<blenvy::blueprints::materials::MaterialInfo>",
      "short_name": "Vec<MaterialInfo>",
      "type": "array",
      "typeInfo": "List"
    },
    "alloc::vec::Vec<core::ops::Range<u32>>": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/core::ops::Range<u32>"
        }
      },
      "long_name": "alloc::vec::Vec<core::ops::Range<u32>>",
      "short_name": "Vec<Range<u32>>",
      "type": "array",
      "typeInfo": "List"
    },
    "alloc::vec::Vec<f32>": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/f32"
        }
      },
      "long_name": "alloc::vec::Vec<f32>",
      "short_name": "Vec<f32>",
      "type": "array",
      "typeInfo": "List"
    },
    "alloc::vec::Vec<glam::Vec3>": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/glam::Vec3"
        }
      },
      "long_name": "alloc::vec::Vec<glam::Vec3>",
      "short_name": "Vec<Vec3>",
      "type": "array",
      "typeInfo": "List"
    },
    "alloc::vec::Vec<petgraph::graph::NodeIndex>": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/petgraph::graph::NodeIndex"
        }
      },
      "long_name": "alloc::vec::Vec<petgraph::graph::NodeIndex>",
      "short_name": "Vec<NodeIndex>",
      "type": "array",
      "typeInfo": "List"
    },
    "alloc::vec::Vec<u16>": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/u16"
        }
      },
      "long_name": "alloc::vec::Vec<u16>",
      "short_name": "Vec<u16>",
      "type": "array",
      "typeInfo": "List"
    },
    "alloc::vec::Vec<u32>": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/u32"
        }
      },
      "long_name": "alloc::vec::Vec<u32>",
      "short_name": "Vec<u32>",
      "type": "array",
      "typeInfo": "List"
    },
    "alloc::vec::Vec<u64>": {
      "isComponent": false,
      "isResource": false,
      "items": {
        "type": {
          "$ref": "#/$defs/u64"
        }
      },
      "long_name": "alloc::vec::Vec<u64>",
      "short_name": "Vec<u64>",
      "type": "array",
      "typeInfo": "List"
    },
    "avian3d::collision::broad_phase::AabbIntersections": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::collision::broad_phase::AabbIntersections",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/alloc::vec::Vec<bevy_ecs::entity::Entity>"
          }
        }
      ],
      "short_name": "AabbIntersections",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::collision::broad_phase::BroadCollisionPairs": {
      "isComponent": false,
      "isResource": true,
      "items": false,
      "long_name": "avian3d::collision::broad_phase::BroadCollisionPairs",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/alloc::vec::Vec<(bevy_ecs::entity::Entity, bevy_ecs::entity::Entity)>"
          }
        }
      ],
      "short_name": "BroadCollisionPairs",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::collision::collider::ColliderAabb": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::collision::collider::ColliderAabb",
      "properties": {
        "max": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "min": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        }
      },
      "required": [
        "min",
        "max"
      ],
      "short_name": "ColliderAabb",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::collision::collider::ColliderParent": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::collision::collider::ColliderParent",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/bevy_ecs::entity::Entity"
          }
        }
      ],
      "short_name": "ColliderParent",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::collision::collider::ColliderTransform": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::collision::collider::ColliderTransform",
      "properties": {
        "rotation": {
          "type": {
            "$ref": "#/$defs/avian3d::position::Rotation"
          }
        },
        "scale": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "translation": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        }
      },
      "required": [
        "translation",
        "rotation",
        "scale"
      ],
      "short_name": "ColliderTransform",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::collision::collider::CollidingEntities": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::collision::collider::CollidingEntities",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/bevy_utils::hashbrown::HashSet<bevy_ecs::entity::Entity, bevy_utils::hashbrown::hash_map::DefaultHashBuilder>"
          }
        }
      ],
      "short_name": "CollidingEntities",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::collision::collider::CollisionMargin": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::collision::collider::CollisionMargin",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/f32"
          }
        }
      ],
      "short_name": "CollisionMargin",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::collision::collider::Sensor": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::collision::collider::Sensor",
      "properties": {},
      "required": [],
      "short_name": "Sensor",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::collision::collider::constructor::ColliderConstructor": {
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::collision::collider::constructor::ColliderConstructor",
      "oneOf": [
        {
          "additionalProperties": false,
          "long_name": "Sphere",
          "properties": {
            "radius": {
              "long_name": "radius",
              "type": {
                "$ref": "#/$defs/f32"
              }
            }
          },
          "required": [
            "radius"
          ],
          "short_name": "Sphere",
          "type": "object",
          "typeInfo": "Struct"
        },
        {
          "additionalProperties": false,
          "long_name": "Cuboid",
          "properties": {
            "x_length": {
              "long_name": "x_length",
              "type": {
                "$ref": "#/$defs/f32"
              }
            },
            "y_length": {
              "long_name": "y_length",
              "type": {
                "$ref": "#/$defs/f32"
              }
            },
            "z_length": {
              "long_name": "z_length",
              "type": {
                "$ref": "#/$defs/f32"
              }
            }
          },
          "required": [
            "x_length",
            "y_length",
            "z_length"
          ],
          "short_name": "Cuboid",
          "type": "object",
          "typeInfo": "Struct"
        },
        {
          "additionalProperties": false,
          "long_name": "RoundCuboid",
          "properties": {
            "border_radius": {
              "long_name": "border_radius",
              "type": {
                "$ref": "#/$defs/f32"
              }
            },
            "x_length": {
              "long_name": "x_length",
              "type": {
                "$ref": "#/$defs/f32"
              }
            },
            "y_length": {
              "long_name": "y_length",
              "type": {
                "$ref": "#/$defs/f32"
              }
            },
            "z_length": {
              "long_name": "z_length",
              "type": {
                "$ref": "#/$defs/f32"
              }
            }
          },
          "required": [
            "x_length",
            "y_length",
            "z_length",
            "border_radius"
          ],
          "short_name": "RoundCuboid",
          "type": "object",
          "typeInfo": "Struct"
        },
        {
          "additionalProperties": false,
          "long_name": "Cylinder",
          "properties": {
            "height": {
              "long_name": "height",
              "type": {
                "$ref": "#/$defs/f32"
              }
            },
            "radius": {
              "long_name": "radius",
              "type": {
                "$ref": "#/$defs/f32"
              }
            }
          },
          "required": [
            "radius",
            "height"
          ],
          "short_name": "Cylinder",
          "type": "object",
          "typeInfo": "Struct"
        },
        {
          "additionalProperties": false,
          "long_name": "Cone",
          "properties": {
            "height": {
              "long_name": "height",
              "type": {
                "$ref": "#/$defs/f32"
              }
            },
            "radius": {
              "long_name": "radius",
              "type": {
                "$ref": "#/$defs/f32"
              }
            }
          },
          "required": [
            "radius",
            "height"
          ],
          "short_name": "Cone",
          "type": "object",
          "typeInfo": "Struct"
        },
        {
          "additionalProperties": false,
          "long_name": "Capsule",
          "properties": {
            "height": {
              "long_name": "height",
              "type": {
                "$ref": "#/$defs/f32"
              }
            },
            "radius": {
              "long_name": "radius",
              "type": {
                "$ref": "#/$defs/f32"
              }
            }
          },
          "required": [
            "radius",
            "height"
          ],
          "short_name": "Capsule",
          "type": "object",
          "typeInfo": "Struct"
        },
        {
          "additionalProperties": false,
          "long_name": "CapsuleEndpoints",
          "properties": {
            "a": {
              "long_name": "a",
              "type": {
                "$ref": "#/$defs/glam::Vec3"
              }
            },
            "b": {
              "long_name": "b",
              "type": {
                "$ref": "#/$defs/glam::Vec3"
              }
            },
            "radius": {
              "long_name": "radius",
              "type": {
                "$ref": "#/$defs/f32"
              }
            }
          },
          "required": [
            "radius",
            "a",
            "b"
          ],
          "short_name": "CapsuleEndpoints",
          "type": "object",
          "typeInfo": "Struct"
        },
        {
          "additionalProperties": false,
          "long_name": "HalfSpace",
          "properties": {
            "outward_normal": {
              "long_name": "outward_normal",
              "type": {
                "$ref": "#/$defs/glam::Vec3"
              }
            }
          },
          "required": [
            "outward_normal"
          ],
          "short_name": "HalfSpace",
          "type": "object",
          "typeInfo": "Struct"
        },
        {
          "additionalProperties": false,
          "long_name": "Segment",
          "properties": {
            "a": {
              "long_name": "a",
              "type": {
                "$ref": "#/$defs/glam::Vec3"
              }
            },
            "b": {
              "long_name": "b",
              "type": {
                "$ref": "#/$defs/glam::Vec3"
              }
            }
          },
          "required": [
            "a",
            "b"
          ],
          "short_name": "Segment",
          "type": "object",
          "typeInfo": "Struct"
        },
        {
          "additionalProperties": false,
          "long_name": "Triangle",
          "properties": {
            "a": {
              "long_name": "a",
              "type": {
                "$ref": "#/$defs/glam::Vec3"
              }
            },
            "b": {
              "long_name": "b",
              "type": {
                "$ref": "#/$defs/glam::Vec3"
              }
            },
            "c": {
              "long_name": "c",
              "type": {
                "$ref": "#/$defs/glam::Vec3"
              }
            }
          },
          "required": [
            "a",
            "b",
            "c"
          ],
          "short_name": "Triangle",
          "type": "object",
          "typeInfo": "Struct"
        },
        {
          "additionalProperties": false,
          "long_name": "Polyline",
          "properties": {
            "indices": {
              "long_name": "indices",
              "type": {
                "$ref": "#/$defs/core::option::Option<alloc::vec::Vec<[u32; 2]>>"
              }
            },
            "vertices": {
              "long_name": "vertices",
              "type": {
                "$ref": "#/$defs/alloc::vec::Vec<glam::Vec3>"
              }
            }
          },
          "required": [
            "vertices"
          ],
          "short_name": "Polyline",
          "type": "object",
          "typeInfo": "Struct"
        },
        {
          "additionalProperties": false,
          "long_name": "Trimesh",
          "properties": {
            "indices": {
              "long_name": "indices",
              "type": {
                "$ref": "#/$defs/alloc::vec::Vec<[u32; 3]>"
              }
            },
            "vertices": {
              "long_name": "vertices",
              "type": {
                "$ref": "#/$defs/alloc::vec::Vec<glam::Vec3>"
              }
            }
          },
          "required": [
            "vertices",
            "indices"
          ],
          "short_name": "Trimesh",
          "type": "object",
          "typeInfo": "Struct"
        },
        {
          "additionalProperties": false,
          "long_name": "TrimeshWithConfig",
          "properties": {
            "flags": {
              "long_name": "flags",
              "type": {
                "$ref": "#/$defs/avian3d::collision::collider::parry::TrimeshFlags"
              }
            },
            "indices": {
              "long_name": "indices",
              "type": {
                "$ref": "#/$defs/alloc::vec::Vec<[u32; 3]>"
              }
            },
            "vertices": {
              "long_name": "vertices",
              "type": {
                "$ref": "#/$defs/alloc::vec::Vec<glam::Vec3>"
              }
            }
          },
          "required": [
            "vertices",
            "indices",
            "flags"
          ],
          "short_name": "TrimeshWithConfig",
          "type": "object",
          "typeInfo": "Struct"
        },
        {
          "additionalProperties": false,
          "long_name": "ConvexDecomposition",
          "properties": {
            "indices": {
              "long_name": "indices",
              "type": {
                "$ref": "#/$defs/alloc::vec::Vec<[u32; 3]>"
              }
            },
            "vertices": {
              "long_name": "vertices",
              "type": {
                "$ref": "#/$defs/alloc::vec::Vec<glam::Vec3>"
              }
            }
          },
          "required": [
            "vertices",
            "indices"
          ],
          "short_name": "ConvexDecomposition",
          "type": "object",
          "typeInfo": "Struct"
        },
        {
          "additionalProperties": false,
          "long_name": "ConvexDecompositionWithConfig",
          "properties": {
            "indices": {
              "long_name": "indices",
              "type": {
                "$ref": "#/$defs/alloc::vec::Vec<[u32; 3]>"
              }
            },
            "params": {
              "long_name": "params",
              "type": {
                "$ref": "#/$defs/avian3d::collision::collider::parry::VhacdParameters"
              }
            },
            "vertices": {
              "long_name": "vertices",
              "type": {
                "$ref": "#/$defs/alloc::vec::Vec<glam::Vec3>"
              }
            }
          },
          "required": [
            "vertices",
            "indices",
            "params"
          ],
          "short_name": "ConvexDecompositionWithConfig",
          "type": "object",
          "typeInfo": "Struct"
        },
        {
          "additionalProperties": false,
          "long_name": "ConvexHull",
          "properties": {
            "points": {
              "long_name": "points",
              "type": {
                "$ref": "#/$defs/alloc::vec::Vec<glam::Vec3>"
              }
            }
          },
          "required": [
            "points"
          ],
          "short_name": "ConvexHull",
          "type": "object",
          "typeInfo": "Struct"
        },
        {
          "additionalProperties": false,
          "long_name": "Heightfield",
          "properties": {
            "heights": {
              "long_name": "heights",
              "type": {
                "$ref": "#/$defs/alloc::vec::Vec<alloc::vec::Vec<f32>>"
              }
            },
            "scale": {
              "long_name": "scale",
              "type": {
                "$ref": "#/$defs/glam::Vec3"
              }
            }
          },
          "required": [
            "heights",
            "scale"
          ],
          "short_name": "Heightfield",
          "type": "object",
          "typeInfo": "Struct"
        },
        {
          "long_name": "TrimeshFromMesh"
        },
        {
          "items": false,
          "long_name": "TrimeshFromMeshWithConfig",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/avian3d::collision::collider::parry::TrimeshFlags"
              }
            }
          ],
          "short_name": "TrimeshFromMeshWithConfig",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "long_name": "ConvexDecompositionFromMesh"
        },
        {
          "items": false,
          "long_name": "ConvexDecompositionFromMeshWithConfig",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/avian3d::collision::collider::parry::VhacdParameters"
              }
            }
          ],
          "short_name": "ConvexDecompositionFromMeshWithConfig",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "long_name": "ConvexHullFromMesh"
        }
      ],
      "short_name": "ColliderConstructor",
      "type": "object",
      "typeInfo": "Enum"
    },
    "avian3d::collision::collider::constructor::ColliderConstructorHierarchy": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::collision::collider::constructor::ColliderConstructorHierarchy",
      "properties": {
        "config": {
          "type": {
            "$ref": "#/$defs/bevy_utils::hashbrown::HashMap<alloc::string::String, core::option::Option<avian3d::collision::collider::constructor::ColliderConstructorHierarchyConfig>, bevy_utils::hashbrown::hash_map::DefaultHashBuilder>"
          }
        },
        "default_constructor": {
          "type": {
            "$ref": "#/$defs/core::option::Option<avian3d::collision::collider::constructor::ColliderConstructor>"
          }
        },
        "default_density": {
          "type": {
            "$ref": "#/$defs/avian3d::dynamics::rigid_body::mass_properties::components::collider::ColliderDensity"
          }
        },
        "default_layers": {
          "type": {
            "$ref": "#/$defs/avian3d::collision::layers::CollisionLayers"
          }
        }
      },
      "required": [
        "default_layers",
        "default_density",
        "config"
      ],
      "short_name": "ColliderConstructorHierarchy",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::collision::collider::constructor::ColliderConstructorHierarchyConfig": {
      "additionalProperties": false,
      "isComponent": false,
      "isResource": false,
      "long_name": "avian3d::collision::collider::constructor::ColliderConstructorHierarchyConfig",
      "properties": {
        "constructor": {
          "type": {
            "$ref": "#/$defs/core::option::Option<avian3d::collision::collider::constructor::ColliderConstructor>"
          }
        },
        "density": {
          "type": {
            "$ref": "#/$defs/core::option::Option<avian3d::dynamics::rigid_body::mass_properties::components::collider::ColliderDensity>"
          }
        },
        "layers": {
          "type": {
            "$ref": "#/$defs/core::option::Option<avian3d::collision::layers::CollisionLayers>"
          }
        }
      },
      "required": [],
      "short_name": "ColliderConstructorHierarchyConfig",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::collision::collider::parry::FillMode": {
      "isComponent": false,
      "isResource": false,
      "long_name": "avian3d::collision::collider::parry::FillMode",
      "oneOf": [
        {
          "long_name": "SurfaceOnly"
        },
        {
          "additionalProperties": false,
          "long_name": "FloodFill",
          "properties": {
            "detect_cavities": {
              "long_name": "detect_cavities",
              "type": {
                "$ref": "#/$defs/bool"
              }
            }
          },
          "required": [
            "detect_cavities"
          ],
          "short_name": "FloodFill",
          "type": "object",
          "typeInfo": "Struct"
        }
      ],
      "short_name": "FillMode",
      "type": "object",
      "typeInfo": "Enum"
    },
    "avian3d::collision::collider::parry::TrimeshFlags": {
      "isComponent": false,
      "isResource": false,
      "long_name": "avian3d::collision::collider::parry::TrimeshFlags",
      "short_name": "TrimeshFlags",
      "type": "object",
      "typeInfo": "Value"
    },
    "avian3d::collision::collider::parry::VhacdParameters": {
      "additionalProperties": false,
      "isComponent": false,
      "isResource": false,
      "long_name": "avian3d::collision::collider::parry::VhacdParameters",
      "properties": {
        "alpha": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "beta": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "concavity": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "convex_hull_approximation": {
          "type": {
            "$ref": "#/$defs/bool"
          }
        },
        "convex_hull_downsampling": {
          "type": {
            "$ref": "#/$defs/u32"
          }
        },
        "fill_mode": {
          "type": {
            "$ref": "#/$defs/avian3d::collision::collider::parry::FillMode"
          }
        },
        "max_convex_hulls": {
          "type": {
            "$ref": "#/$defs/u32"
          }
        },
        "plane_downsampling": {
          "type": {
            "$ref": "#/$defs/u32"
          }
        },
        "resolution": {
          "type": {
            "$ref": "#/$defs/u32"
          }
        }
      },
      "required": [
        "concavity",
        "alpha",
        "beta",
        "resolution",
        "plane_downsampling",
        "convex_hull_downsampling",
        "fill_mode",
        "convex_hull_approximation",
        "max_convex_hulls"
      ],
      "short_name": "VhacdParameters",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::collision::layers::CollisionLayers": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::collision::layers::CollisionLayers",
      "properties": {
        "filters": {
          "type": {
            "$ref": "#/$defs/avian3d::collision::layers::LayerMask"
          }
        },
        "memberships": {
          "type": {
            "$ref": "#/$defs/avian3d::collision::layers::LayerMask"
          }
        }
      },
      "required": [
        "memberships",
        "filters"
      ],
      "short_name": "CollisionLayers",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::collision::layers::LayerMask": {
      "isComponent": false,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::collision::layers::LayerMask",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/u32"
          }
        }
      ],
      "short_name": "LayerMask",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::collision::narrow_phase::NarrowPhaseConfig": {
      "additionalProperties": false,
      "isComponent": false,
      "isResource": true,
      "long_name": "avian3d::collision::narrow_phase::NarrowPhaseConfig",
      "properties": {
        "contact_tolerance": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "default_speculative_margin": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "match_contacts": {
          "type": {
            "$ref": "#/$defs/bool"
          }
        }
      },
      "required": [
        "default_speculative_margin",
        "contact_tolerance",
        "match_contacts"
      ],
      "short_name": "NarrowPhaseConfig",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::debug_render::configuration::ContactGizmoScale": {
      "isComponent": false,
      "isResource": false,
      "long_name": "avian3d::debug_render::configuration::ContactGizmoScale",
      "oneOf": [
        {
          "items": false,
          "long_name": "Constant",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/f32"
              }
            }
          ],
          "short_name": "Constant",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "items": false,
          "long_name": "Scaled",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/f32"
              }
            }
          ],
          "short_name": "Scaled",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "ContactGizmoScale",
      "type": "object",
      "typeInfo": "Enum"
    },
    "avian3d::debug_render::configuration::DebugRender": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::debug_render::configuration::DebugRender",
      "properties": {
        "aabb_color": {
          "type": {
            "$ref": "#/$defs/core::option::Option<bevy_color::color::Color>"
          }
        },
        "axis_lengths": {
          "type": {
            "$ref": "#/$defs/core::option::Option<glam::Vec3>"
          }
        },
        "collider_color": {
          "type": {
            "$ref": "#/$defs/core::option::Option<bevy_color::color::Color>"
          }
        },
        "hide_mesh": {
          "type": {
            "$ref": "#/$defs/bool"
          }
        },
        "sleeping_color_multiplier": {
          "type": {
            "$ref": "#/$defs/core::option::Option<[f32; 4]>"
          }
        }
      },
      "required": [
        "hide_mesh"
      ],
      "short_name": "DebugRender",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::debug_render::configuration::PhysicsGizmos": {
      "additionalProperties": false,
      "isComponent": false,
      "isResource": false,
      "long_name": "avian3d::debug_render::configuration::PhysicsGizmos",
      "properties": {
        "aabb_color": {
          "type": {
            "$ref": "#/$defs/core::option::Option<bevy_color::color::Color>"
          }
        },
        "axis_lengths": {
          "type": {
            "$ref": "#/$defs/core::option::Option<glam::Vec3>"
          }
        },
        "collider_color": {
          "type": {
            "$ref": "#/$defs/core::option::Option<bevy_color::color::Color>"
          }
        },
        "contact_normal_color": {
          "type": {
            "$ref": "#/$defs/core::option::Option<bevy_color::color::Color>"
          }
        },
        "contact_normal_scale": {
          "type": {
            "$ref": "#/$defs/avian3d::debug_render::configuration::ContactGizmoScale"
          }
        },
        "contact_point_color": {
          "type": {
            "$ref": "#/$defs/core::option::Option<bevy_color::color::Color>"
          }
        },
        "hide_meshes": {
          "type": {
            "$ref": "#/$defs/bool"
          }
        },
        "joint_anchor_color": {
          "type": {
            "$ref": "#/$defs/core::option::Option<bevy_color::color::Color>"
          }
        },
        "joint_separation_color": {
          "type": {
            "$ref": "#/$defs/core::option::Option<bevy_color::color::Color>"
          }
        },
        "raycast_color": {
          "type": {
            "$ref": "#/$defs/core::option::Option<bevy_color::color::Color>"
          }
        },
        "raycast_normal_color": {
          "type": {
            "$ref": "#/$defs/core::option::Option<bevy_color::color::Color>"
          }
        },
        "raycast_point_color": {
          "type": {
            "$ref": "#/$defs/core::option::Option<bevy_color::color::Color>"
          }
        },
        "shapecast_color": {
          "type": {
            "$ref": "#/$defs/core::option::Option<bevy_color::color::Color>"
          }
        },
        "shapecast_normal_color": {
          "type": {
            "$ref": "#/$defs/core::option::Option<bevy_color::color::Color>"
          }
        },
        "shapecast_point_color": {
          "type": {
            "$ref": "#/$defs/core::option::Option<bevy_color::color::Color>"
          }
        },
        "shapecast_shape_color": {
          "type": {
            "$ref": "#/$defs/core::option::Option<bevy_color::color::Color>"
          }
        },
        "sleeping_color_multiplier": {
          "type": {
            "$ref": "#/$defs/core::option::Option<[f32; 4]>"
          }
        }
      },
      "required": [
        "contact_normal_scale",
        "hide_meshes"
      ],
      "short_name": "PhysicsGizmos",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::dynamics::ccd::SpeculativeMargin": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::dynamics::ccd::SpeculativeMargin",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/f32"
          }
        }
      ],
      "short_name": "SpeculativeMargin",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::dynamics::ccd::SweepMode": {
      "isComponent": false,
      "isResource": false,
      "long_name": "avian3d::dynamics::ccd::SweepMode",
      "oneOf": [
        "Linear",
        "NonLinear"
      ],
      "short_name": "SweepMode",
      "type": "string",
      "typeInfo": "Enum"
    },
    "avian3d::dynamics::ccd::SweptCcd": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::dynamics::ccd::SweptCcd",
      "properties": {
        "angular_threshold": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "include_dynamic": {
          "type": {
            "$ref": "#/$defs/bool"
          }
        },
        "linear_threshold": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "mode": {
          "type": {
            "$ref": "#/$defs/avian3d::dynamics::ccd::SweepMode"
          }
        }
      },
      "required": [
        "mode",
        "include_dynamic",
        "linear_threshold",
        "angular_threshold"
      ],
      "short_name": "SweptCcd",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::dynamics::integrator::Gravity": {
      "isComponent": false,
      "isResource": true,
      "items": false,
      "long_name": "avian3d::dynamics::integrator::Gravity",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        }
      ],
      "short_name": "Gravity",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::dynamics::rigid_body::AccumulatedTranslation": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::dynamics::rigid_body::AccumulatedTranslation",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        }
      ],
      "short_name": "AccumulatedTranslation",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::dynamics::rigid_body::AngularDamping": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::dynamics::rigid_body::AngularDamping",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/f32"
          }
        }
      ],
      "short_name": "AngularDamping",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::dynamics::rigid_body::AngularVelocity": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::dynamics::rigid_body::AngularVelocity",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        }
      ],
      "short_name": "AngularVelocity",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::dynamics::rigid_body::Dominance": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::dynamics::rigid_body::Dominance",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/i8"
          }
        }
      ],
      "short_name": "Dominance",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::dynamics::rigid_body::GravityScale": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::dynamics::rigid_body::GravityScale",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/f32"
          }
        }
      ],
      "short_name": "GravityScale",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::dynamics::rigid_body::LinearDamping": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::dynamics::rigid_body::LinearDamping",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/f32"
          }
        }
      ],
      "short_name": "LinearDamping",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::dynamics::rigid_body::LinearVelocity": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::dynamics::rigid_body::LinearVelocity",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        }
      ],
      "short_name": "LinearVelocity",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::dynamics::rigid_body::MaxAngularSpeed": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::dynamics::rigid_body::MaxAngularSpeed",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/f32"
          }
        }
      ],
      "short_name": "MaxAngularSpeed",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::dynamics::rigid_body::MaxLinearSpeed": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::dynamics::rigid_body::MaxLinearSpeed",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/f32"
          }
        }
      ],
      "short_name": "MaxLinearSpeed",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::dynamics::rigid_body::PreSolveAngularVelocity": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::dynamics::rigid_body::PreSolveAngularVelocity",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        }
      ],
      "short_name": "PreSolveAngularVelocity",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::dynamics::rigid_body::PreSolveLinearVelocity": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::dynamics::rigid_body::PreSolveLinearVelocity",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        }
      ],
      "short_name": "PreSolveLinearVelocity",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::dynamics::rigid_body::RigidBody": {
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::dynamics::rigid_body::RigidBody",
      "oneOf": [
        "Dynamic",
        "Static",
        "Kinematic"
      ],
      "short_name": "RigidBody",
      "type": "string",
      "typeInfo": "Enum"
    },
    "avian3d::dynamics::rigid_body::RigidBodyDisabled": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::dynamics::rigid_body::RigidBodyDisabled",
      "properties": {},
      "required": [],
      "short_name": "RigidBodyDisabled",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::dynamics::rigid_body::Sleeping": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::dynamics::rigid_body::Sleeping",
      "properties": {},
      "required": [],
      "short_name": "Sleeping",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::dynamics::rigid_body::SleepingDisabled": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::dynamics::rigid_body::SleepingDisabled",
      "properties": {},
      "required": [],
      "short_name": "SleepingDisabled",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::dynamics::rigid_body::TimeSleeping": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::dynamics::rigid_body::TimeSleeping",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/f32"
          }
        }
      ],
      "short_name": "TimeSleeping",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::dynamics::rigid_body::forces::ExternalAngularImpulse": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::dynamics::rigid_body::forces::ExternalAngularImpulse",
      "properties": {
        "impulse": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "persistent": {
          "type": {
            "$ref": "#/$defs/bool"
          }
        }
      },
      "required": [
        "impulse",
        "persistent"
      ],
      "short_name": "ExternalAngularImpulse",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::dynamics::rigid_body::forces::ExternalForce": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::dynamics::rigid_body::forces::ExternalForce",
      "properties": {
        "force": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "persistent": {
          "type": {
            "$ref": "#/$defs/bool"
          }
        },
        "torque": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        }
      },
      "required": [
        "force",
        "persistent",
        "torque"
      ],
      "short_name": "ExternalForce",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::dynamics::rigid_body::forces::ExternalImpulse": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::dynamics::rigid_body::forces::ExternalImpulse",
      "properties": {
        "angular_impulse": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "impulse": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "persistent": {
          "type": {
            "$ref": "#/$defs/bool"
          }
        }
      },
      "required": [
        "impulse",
        "persistent",
        "angular_impulse"
      ],
      "short_name": "ExternalImpulse",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::dynamics::rigid_body::forces::ExternalTorque": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::dynamics::rigid_body::forces::ExternalTorque",
      "properties": {
        "persistent": {
          "type": {
            "$ref": "#/$defs/bool"
          }
        },
        "torque": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        }
      },
      "required": [
        "torque",
        "persistent"
      ],
      "short_name": "ExternalTorque",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::dynamics::rigid_body::locked_axes::LockedAxes": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::dynamics::rigid_body::locked_axes::LockedAxes",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/u8"
          }
        }
      ],
      "short_name": "LockedAxes",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::dynamics::rigid_body::mass_properties::components::AngularInertia": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::dynamics::rigid_body::mass_properties::components::AngularInertia",
      "properties": {
        "local_frame": {
          "type": {
            "$ref": "#/$defs/glam::Quat"
          }
        },
        "principal": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        }
      },
      "required": [
        "principal",
        "local_frame"
      ],
      "short_name": "AngularInertia",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::dynamics::rigid_body::mass_properties::components::CenterOfMass": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::dynamics::rigid_body::mass_properties::components::CenterOfMass",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        }
      ],
      "short_name": "CenterOfMass",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::dynamics::rigid_body::mass_properties::components::Mass": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::dynamics::rigid_body::mass_properties::components::Mass",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/f32"
          }
        }
      ],
      "short_name": "Mass",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::dynamics::rigid_body::mass_properties::components::NoAutoAngularInertia": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::dynamics::rigid_body::mass_properties::components::NoAutoAngularInertia",
      "properties": {},
      "required": [],
      "short_name": "NoAutoAngularInertia",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::dynamics::rigid_body::mass_properties::components::NoAutoCenterOfMass": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::dynamics::rigid_body::mass_properties::components::NoAutoCenterOfMass",
      "properties": {},
      "required": [],
      "short_name": "NoAutoCenterOfMass",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::dynamics::rigid_body::mass_properties::components::NoAutoMass": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::dynamics::rigid_body::mass_properties::components::NoAutoMass",
      "properties": {},
      "required": [],
      "short_name": "NoAutoMass",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::dynamics::rigid_body::mass_properties::components::collider::ColliderDensity": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::dynamics::rigid_body::mass_properties::components::collider::ColliderDensity",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/f32"
          }
        }
      ],
      "short_name": "ColliderDensity",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::dynamics::rigid_body::mass_properties::components::collider::ColliderMassProperties": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::dynamics::rigid_body::mass_properties::components::collider::ColliderMassProperties",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/bevy_heavy::dim3::MassProperties3d"
          }
        }
      ],
      "short_name": "ColliderMassProperties",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::dynamics::rigid_body::mass_properties::components::computed::ComputedAngularInertia": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::dynamics::rigid_body::mass_properties::components::computed::ComputedAngularInertia",
      "properties": {
        "inverse": {
          "type": {
            "$ref": "#/$defs/glam::Mat3"
          }
        }
      },
      "required": [
        "inverse"
      ],
      "short_name": "ComputedAngularInertia",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::dynamics::rigid_body::mass_properties::components::computed::ComputedCenterOfMass": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::dynamics::rigid_body::mass_properties::components::computed::ComputedCenterOfMass",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        }
      ],
      "short_name": "ComputedCenterOfMass",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::dynamics::rigid_body::mass_properties::components::computed::ComputedMass": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::dynamics::rigid_body::mass_properties::components::computed::ComputedMass",
      "properties": {
        "inverse": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        }
      },
      "required": [
        "inverse"
      ],
      "short_name": "ComputedMass",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::dynamics::rigid_body::physics_material::CoefficientCombine": {
      "isComponent": false,
      "isResource": false,
      "long_name": "avian3d::dynamics::rigid_body::physics_material::CoefficientCombine",
      "oneOf": [
        "Average",
        "GeometricMean",
        "Min",
        "Multiply",
        "Max"
      ],
      "short_name": "CoefficientCombine",
      "type": "string",
      "typeInfo": "Enum"
    },
    "avian3d::dynamics::rigid_body::physics_material::DefaultFriction": {
      "isComponent": false,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::dynamics::rigid_body::physics_material::DefaultFriction",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/avian3d::dynamics::rigid_body::physics_material::Friction"
          }
        }
      ],
      "short_name": "DefaultFriction",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::dynamics::rigid_body::physics_material::DefaultRestitution": {
      "isComponent": false,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::dynamics::rigid_body::physics_material::DefaultRestitution",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/avian3d::dynamics::rigid_body::physics_material::Restitution"
          }
        }
      ],
      "short_name": "DefaultRestitution",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::dynamics::rigid_body::physics_material::Friction": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::dynamics::rigid_body::physics_material::Friction",
      "properties": {
        "combine_rule": {
          "type": {
            "$ref": "#/$defs/avian3d::dynamics::rigid_body::physics_material::CoefficientCombine"
          }
        },
        "dynamic_coefficient": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "static_coefficient": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        }
      },
      "required": [
        "dynamic_coefficient",
        "static_coefficient",
        "combine_rule"
      ],
      "short_name": "Friction",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::dynamics::rigid_body::physics_material::Restitution": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::dynamics::rigid_body::physics_material::Restitution",
      "properties": {
        "coefficient": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "combine_rule": {
          "type": {
            "$ref": "#/$defs/avian3d::dynamics::rigid_body::physics_material::CoefficientCombine"
          }
        }
      },
      "required": [
        "coefficient",
        "combine_rule"
      ],
      "short_name": "Restitution",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::dynamics::sleeping::DeactivationTime": {
      "isComponent": false,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::dynamics::sleeping::DeactivationTime",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/f32"
          }
        }
      ],
      "short_name": "DeactivationTime",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::dynamics::sleeping::SleepingThreshold": {
      "additionalProperties": false,
      "isComponent": false,
      "isResource": true,
      "long_name": "avian3d::dynamics::sleeping::SleepingThreshold",
      "properties": {
        "angular": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "linear": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        }
      },
      "required": [
        "linear",
        "angular"
      ],
      "short_name": "SleepingThreshold",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::dynamics::solver::SolverConfig": {
      "additionalProperties": false,
      "isComponent": false,
      "isResource": true,
      "long_name": "avian3d::dynamics::solver::SolverConfig",
      "properties": {
        "contact_damping_ratio": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "contact_frequency_factor": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "max_overlap_solve_speed": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "restitution_iterations": {
          "type": {
            "$ref": "#/$defs/usize"
          }
        },
        "restitution_threshold": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "warm_start_coefficient": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        }
      },
      "required": [
        "contact_damping_ratio",
        "contact_frequency_factor",
        "max_overlap_solve_speed",
        "warm_start_coefficient",
        "restitution_threshold",
        "restitution_iterations"
      ],
      "short_name": "SolverConfig",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::dynamics::solver::joints::AngleLimit": {
      "additionalProperties": false,
      "isComponent": false,
      "isResource": false,
      "long_name": "avian3d::dynamics::solver::joints::AngleLimit",
      "properties": {
        "max": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "min": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        }
      },
      "required": [
        "min",
        "max"
      ],
      "short_name": "AngleLimit",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::dynamics::solver::joints::DistanceLimit": {
      "additionalProperties": false,
      "isComponent": false,
      "isResource": false,
      "long_name": "avian3d::dynamics::solver::joints::DistanceLimit",
      "properties": {
        "max": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "min": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        }
      },
      "required": [
        "min",
        "max"
      ],
      "short_name": "DistanceLimit",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::dynamics::solver::joints::distance::DistanceJoint": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::dynamics::solver::joints::distance::DistanceJoint",
      "properties": {
        "compliance": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "damping_angular": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "damping_linear": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "entity1": {
          "type": {
            "$ref": "#/$defs/bevy_ecs::entity::Entity"
          }
        },
        "entity2": {
          "type": {
            "$ref": "#/$defs/bevy_ecs::entity::Entity"
          }
        },
        "force": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "lagrange": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "length_limits": {
          "type": {
            "$ref": "#/$defs/core::option::Option<avian3d::dynamics::solver::joints::DistanceLimit>"
          }
        },
        "local_anchor1": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "local_anchor2": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "rest_length": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        }
      },
      "required": [
        "entity1",
        "entity2",
        "local_anchor1",
        "local_anchor2",
        "rest_length",
        "damping_linear",
        "damping_angular",
        "lagrange",
        "compliance",
        "force"
      ],
      "short_name": "DistanceJoint",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::dynamics::solver::joints::fixed::FixedJoint": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::dynamics::solver::joints::fixed::FixedJoint",
      "properties": {
        "align_lagrange": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "align_torque": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "compliance": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "damping_angular": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "damping_linear": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "entity1": {
          "type": {
            "$ref": "#/$defs/bevy_ecs::entity::Entity"
          }
        },
        "entity2": {
          "type": {
            "$ref": "#/$defs/bevy_ecs::entity::Entity"
          }
        },
        "force": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "local_anchor1": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "local_anchor2": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "position_lagrange": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        }
      },
      "required": [
        "entity1",
        "entity2",
        "local_anchor1",
        "local_anchor2",
        "damping_linear",
        "damping_angular",
        "position_lagrange",
        "align_lagrange",
        "compliance",
        "force",
        "align_torque"
      ],
      "short_name": "FixedJoint",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::dynamics::solver::joints::prismatic::PrismaticJoint": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::dynamics::solver::joints::prismatic::PrismaticJoint",
      "properties": {
        "align_lagrange": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "align_torque": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "compliance": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "damping_angular": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "damping_linear": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "entity1": {
          "type": {
            "$ref": "#/$defs/bevy_ecs::entity::Entity"
          }
        },
        "entity2": {
          "type": {
            "$ref": "#/$defs/bevy_ecs::entity::Entity"
          }
        },
        "force": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "free_axis": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "free_axis_limits": {
          "type": {
            "$ref": "#/$defs/core::option::Option<avian3d::dynamics::solver::joints::DistanceLimit>"
          }
        },
        "local_anchor1": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "local_anchor2": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "position_lagrange": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        }
      },
      "required": [
        "entity1",
        "entity2",
        "local_anchor1",
        "local_anchor2",
        "free_axis",
        "damping_linear",
        "damping_angular",
        "position_lagrange",
        "align_lagrange",
        "compliance",
        "force",
        "align_torque"
      ],
      "short_name": "PrismaticJoint",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::dynamics::solver::joints::revolute::RevoluteJoint": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::dynamics::solver::joints::revolute::RevoluteJoint",
      "properties": {
        "align_lagrange": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "align_torque": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "aligned_axis": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "angle_limit": {
          "type": {
            "$ref": "#/$defs/core::option::Option<avian3d::dynamics::solver::joints::AngleLimit>"
          }
        },
        "angle_limit_lagrange": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "angle_limit_torque": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "compliance": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "damping_angular": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "damping_linear": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "entity1": {
          "type": {
            "$ref": "#/$defs/bevy_ecs::entity::Entity"
          }
        },
        "entity2": {
          "type": {
            "$ref": "#/$defs/bevy_ecs::entity::Entity"
          }
        },
        "force": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "local_anchor1": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "local_anchor2": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "position_lagrange": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        }
      },
      "required": [
        "entity1",
        "entity2",
        "local_anchor1",
        "local_anchor2",
        "aligned_axis",
        "damping_linear",
        "damping_angular",
        "position_lagrange",
        "align_lagrange",
        "angle_limit_lagrange",
        "compliance",
        "force",
        "align_torque",
        "angle_limit_torque"
      ],
      "short_name": "RevoluteJoint",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::dynamics::solver::joints::spherical::SphericalJoint": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::dynamics::solver::joints::spherical::SphericalJoint",
      "properties": {
        "compliance": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "damping_angular": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "damping_linear": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "entity1": {
          "type": {
            "$ref": "#/$defs/bevy_ecs::entity::Entity"
          }
        },
        "entity2": {
          "type": {
            "$ref": "#/$defs/bevy_ecs::entity::Entity"
          }
        },
        "force": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "local_anchor1": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "local_anchor2": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "position_lagrange": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "swing_axis": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "swing_lagrange": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "swing_limit": {
          "type": {
            "$ref": "#/$defs/core::option::Option<avian3d::dynamics::solver::joints::AngleLimit>"
          }
        },
        "swing_torque": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "twist_axis": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "twist_lagrange": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "twist_limit": {
          "type": {
            "$ref": "#/$defs/core::option::Option<avian3d::dynamics::solver::joints::AngleLimit>"
          }
        },
        "twist_torque": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        }
      },
      "required": [
        "entity1",
        "entity2",
        "local_anchor1",
        "local_anchor2",
        "swing_axis",
        "twist_axis",
        "damping_linear",
        "damping_angular",
        "position_lagrange",
        "swing_lagrange",
        "twist_lagrange",
        "compliance",
        "force",
        "swing_torque",
        "twist_torque"
      ],
      "short_name": "SphericalJoint",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::dynamics::solver::schedule::SubstepCount": {
      "isComponent": false,
      "isResource": true,
      "items": false,
      "long_name": "avian3d::dynamics::solver::schedule::SubstepCount",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/u32"
          }
        }
      ],
      "short_name": "SubstepCount",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::position::Position": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::position::Position",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        }
      ],
      "short_name": "Position",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::position::PreSolveAccumulatedTranslation": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::position::PreSolveAccumulatedTranslation",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        }
      ],
      "short_name": "PreSolveAccumulatedTranslation",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::position::PreviousRotation": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::position::PreviousRotation",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/avian3d::position::Rotation"
          }
        }
      ],
      "short_name": "PreviousRotation",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::position::Rotation": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::position::Rotation",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/glam::Quat"
          }
        }
      ],
      "short_name": "Rotation",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::prepare::PrepareConfig": {
      "additionalProperties": false,
      "isComponent": false,
      "isResource": true,
      "long_name": "avian3d::prepare::PrepareConfig",
      "properties": {
        "position_to_transform": {
          "type": {
            "$ref": "#/$defs/bool"
          }
        },
        "transform_to_position": {
          "type": {
            "$ref": "#/$defs/bool"
          }
        }
      },
      "required": [
        "position_to_transform",
        "transform_to_position"
      ],
      "short_name": "PrepareConfig",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::schedule::time::Physics": {
      "additionalProperties": false,
      "isComponent": false,
      "isResource": false,
      "long_name": "avian3d::schedule::time::Physics",
      "properties": {
        "paused": {
          "type": {
            "$ref": "#/$defs/bool"
          }
        },
        "relative_speed": {
          "type": {
            "$ref": "#/$defs/f64"
          }
        }
      },
      "required": [
        "paused",
        "relative_speed"
      ],
      "short_name": "Physics",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::schedule::time::Substeps": {
      "additionalProperties": false,
      "isComponent": false,
      "isResource": false,
      "long_name": "avian3d::schedule::time::Substeps",
      "properties": {},
      "required": [],
      "short_name": "Substeps",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::spatial_query::query_filter::SpatialQueryFilter": {
      "additionalProperties": false,
      "isComponent": false,
      "isResource": false,
      "long_name": "avian3d::spatial_query::query_filter::SpatialQueryFilter",
      "properties": {
        "excluded_entities": {
          "type": {
            "$ref": "#/$defs/bevy_utils::hashbrown::HashSet<bevy_ecs::entity::Entity, bevy_ecs::entity::hash::EntityHash>"
          }
        },
        "mask": {
          "type": {
            "$ref": "#/$defs/avian3d::collision::layers::LayerMask"
          }
        }
      },
      "required": [
        "mask",
        "excluded_entities"
      ],
      "short_name": "SpatialQueryFilter",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::spatial_query::ray_caster::RayCaster": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::spatial_query::ray_caster::RayCaster",
      "properties": {
        "direction": {
          "type": {
            "$ref": "#/$defs/bevy_math::direction::Dir3"
          }
        },
        "enabled": {
          "type": {
            "$ref": "#/$defs/bool"
          }
        },
        "global_direction": {
          "type": {
            "$ref": "#/$defs/bevy_math::direction::Dir3"
          }
        },
        "global_origin": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "ignore_self": {
          "type": {
            "$ref": "#/$defs/bool"
          }
        },
        "max_distance": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "max_hits": {
          "type": {
            "$ref": "#/$defs/u32"
          }
        },
        "origin": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "query_filter": {
          "type": {
            "$ref": "#/$defs/avian3d::spatial_query::query_filter::SpatialQueryFilter"
          }
        },
        "solid": {
          "type": {
            "$ref": "#/$defs/bool"
          }
        }
      },
      "required": [
        "enabled",
        "origin",
        "global_origin",
        "direction",
        "global_direction",
        "max_hits",
        "max_distance",
        "solid",
        "ignore_self",
        "query_filter"
      ],
      "short_name": "RayCaster",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::spatial_query::shape_caster::ShapeCaster": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::spatial_query::shape_caster::ShapeCaster",
      "properties": {
        "compute_contact_on_penetration": {
          "type": {
            "$ref": "#/$defs/bool"
          }
        },
        "direction": {
          "type": {
            "$ref": "#/$defs/bevy_math::direction::Dir3"
          }
        },
        "enabled": {
          "type": {
            "$ref": "#/$defs/bool"
          }
        },
        "global_direction": {
          "type": {
            "$ref": "#/$defs/bevy_math::direction::Dir3"
          }
        },
        "global_origin": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "global_shape_rotation": {
          "type": {
            "$ref": "#/$defs/glam::Quat"
          }
        },
        "ignore_origin_penetration": {
          "type": {
            "$ref": "#/$defs/bool"
          }
        },
        "ignore_self": {
          "type": {
            "$ref": "#/$defs/bool"
          }
        },
        "max_distance": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "max_hits": {
          "type": {
            "$ref": "#/$defs/u32"
          }
        },
        "origin": {
          "type": {
            "$ref": "#/$defs/glam::Vec3"
          }
        },
        "query_filter": {
          "type": {
            "$ref": "#/$defs/avian3d::spatial_query::query_filter::SpatialQueryFilter"
          }
        },
        "shape_rotation": {
          "type": {
            "$ref": "#/$defs/glam::Quat"
          }
        },
        "target_distance": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        }
      },
      "required": [
        "enabled",
        "origin",
        "global_origin",
        "shape_rotation",
        "global_shape_rotation",
        "direction",
        "global_direction",
        "max_hits",
        "max_distance",
        "target_distance",
        "compute_contact_on_penetration",
        "ignore_origin_penetration",
        "ignore_self",
        "query_filter"
      ],
      "short_name": "ShapeCaster",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::sync::PreviousGlobalTransform": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "avian3d::sync::PreviousGlobalTransform",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/bevy_transform::components::global_transform::GlobalTransform"
          }
        }
      ],
      "short_name": "PreviousGlobalTransform",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "avian3d::sync::SyncConfig": {
      "additionalProperties": false,
      "isComponent": false,
      "isResource": true,
      "long_name": "avian3d::sync::SyncConfig",
      "properties": {
        "position_to_transform": {
          "type": {
            "$ref": "#/$defs/bool"
          }
        },
        "transform_to_collider_scale": {
          "type": {
            "$ref": "#/$defs/bool"
          }
        },
        "transform_to_position": {
          "type": {
            "$ref": "#/$defs/bool"
          }
        }
      },
      "required": [
        "position_to_transform",
        "transform_to_position",
        "transform_to_collider_scale"
      ],
      "short_name": "SyncConfig",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::sync::ancestor_marker::AncestorMarker<avian3d::collision::collider::backend::ColliderMarker>": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::sync::ancestor_marker::AncestorMarker<avian3d::collision::collider::backend::ColliderMarker>",
      "properties": {},
      "required": [],
      "short_name": "AncestorMarker<ColliderMarker>",
      "type": "object",
      "typeInfo": "Struct"
    },
    "avian3d::sync::ancestor_marker::AncestorMarker<avian3d::dynamics::rigid_body::RigidBody>": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "avian3d::sync::ancestor_marker::AncestorMarker<avian3d::dynamics::rigid_body::RigidBody>",
      "properties": {},
      "required": [],
      "short_name": "AncestorMarker<RigidBody>",
      "type": "object",
      "typeInfo": "Struct"
    },
    "bevy_a11y::Focus": {
      "isComponent": false,
      "isResource": true,
      "items": false,
      "long_name": "bevy_a11y::Focus",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/core::option::Option<bevy_ecs::entity::Entity>"
          }
        }
      ],
      "short_name": "Focus",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "bevy_animation::ActiveAnimation": {
      "additionalProperties": false,
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_animation::ActiveAnimation",
      "properties": {
        "completions": {
          "type": {
            "$ref": "#/$defs/u32"
          }
        },
        "elapsed": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "just_completed": {
          "type": {
            "$ref": "#/$defs/bool"
          }
        },
        "last_seek_time": {
          "type": {
            "$ref": "#/$defs/core::option::Option<f32>"
          }
        },
        "paused": {
          "type": {
            "$ref": "#/$defs/bool"
          }
        },
        "repeat": {
          "type": {
            "$ref": "#/$defs/bevy_animation::RepeatAnimation"
          }
        },
        "seek_time": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "speed": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "weight": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        }
      },
      "required": [
        "weight",
        "repeat",
        "speed",
        "elapsed",
        "seek_time",
        "completions",
        "just_completed",
        "paused"
      ],
      "short_name": "ActiveAnimation",
      "type": "object",
      "typeInfo": "Struct"
    },
    "bevy_animation::AnimationClip": {
      "additionalProperties": false,
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_animation::AnimationClip",
      "properties": {
        "duration": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "events": {
          "type": {
            "$ref": "#/$defs/bevy_utils::hashbrown::HashMap<bevy_animation::AnimationEventTarget, alloc::vec::Vec<bevy_animation::TimedAnimationEvent>, bevy_utils::hashbrown::hash_map::DefaultHashBuilder>"
          }
        }
      },
      "required": [
        "events",
        "duration"
      ],
      "short_name": "AnimationClip",
      "type": "object",
      "typeInfo": "Struct"
    },
    "bevy_animation::AnimationEvent": {
      "additionalProperties": false,
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_animation::AnimationEvent",
      "properties": {},
      "required": [],
      "short_name": "AnimationEvent",
      "type": "object",
      "typeInfo": "Struct"
    },
    "bevy_animation::AnimationEventTarget": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_animation::AnimationEventTarget",
      "oneOf": [
        {
          "long_name": "Root"
        },
        {
          "items": false,
          "long_name": "Node",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/bevy_animation::AnimationTargetId"
              }
            }
          ],
          "short_name": "Node",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "AnimationEventTarget",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_animation::AnimationPlayer": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "bevy_animation::AnimationPlayer",
      "properties": {
        "active_animations": {
          "type": {
            "$ref": "#/$defs/bevy_utils::hashbrown::HashMap<petgraph::graph::NodeIndex, bevy_animation::ActiveAnimation, bevy_utils::hashbrown::hash_map::DefaultHashBuilder>"
          }
        },
        "blend_weights": {
          "type": {
            "$ref": "#/$defs/bevy_utils::hashbrown::HashMap<petgraph::graph::NodeIndex, f32, bevy_utils::hashbrown::hash_map::DefaultHashBuilder>"
          }
        }
      },
      "required": [
        "active_animations",
        "blend_weights"
      ],
      "short_name": "AnimationPlayer",
      "type": "object",
      "typeInfo": "Struct"
    },
    "bevy_animation::AnimationTarget": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "bevy_animation::AnimationTarget",
      "properties": {
        "id": {
          "type": {
            "$ref": "#/$defs/bevy_animation::AnimationTargetId"
          }
        },
        "player": {
          "type": {
            "$ref": "#/$defs/bevy_ecs::entity::Entity"
          }
        }
      },
      "required": [
        "id",
        "player"
      ],
      "short_name": "AnimationTarget",
      "type": "object",
      "typeInfo": "Struct"
    },
    "bevy_animation::AnimationTargetId": {
      "isComponent": false,
      "isResource": false,
      "items": false,
      "long_name": "bevy_animation::AnimationTargetId",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/uuid::Uuid"
          }
        }
      ],
      "short_name": "AnimationTargetId",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "bevy_animation::RepeatAnimation": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_animation::RepeatAnimation",
      "oneOf": [
        {
          "long_name": "Never"
        },
        {
          "items": false,
          "long_name": "Count",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/u32"
              }
            }
          ],
          "short_name": "Count",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "long_name": "Forever"
        }
      ],
      "short_name": "RepeatAnimation",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_animation::TimedAnimationEvent": {
      "additionalProperties": false,
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_animation::TimedAnimationEvent",
      "properties": {
        "event": {
          "type": {
            "$ref": "#/$defs/bevy_animation::AnimationEvent"
          }
        },
        "time": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        }
      },
      "required": [
        "time",
        "event"
      ],
      "short_name": "TimedAnimationEvent",
      "type": "object",
      "typeInfo": "Struct"
    },
    "bevy_animation::graph::AnimationGraph": {
      "additionalProperties": false,
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_animation::graph::AnimationGraph",
      "properties": {
        "graph": {
          "type": {
            "$ref": "#/$defs/petgraph::graph::DiGraph<bevy_animation::graph::AnimationGraphNode, (), u32>"
          }
        },
        "mask_groups": {
          "type": {
            "$ref": "#/$defs/bevy_utils::hashbrown::HashMap<bevy_animation::AnimationTargetId, u64, bevy_utils::hashbrown::hash_map::DefaultHashBuilder>"
          }
        },
        "root": {
          "type": {
            "$ref": "#/$defs/petgraph::graph::NodeIndex"
          }
        }
      },
      "required": [
        "graph",
        "root",
        "mask_groups"
      ],
      "short_name": "AnimationGraph",
      "type": "object",
      "typeInfo": "Struct"
    },
    "bevy_animation::graph::AnimationGraphHandle": {
      "isComponent": true,
      "isResource": false,
      "items": false,
      "long_name": "bevy_animation::graph::AnimationGraphHandle",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/bevy_asset::handle::Handle<bevy_animation::graph::AnimationGraph>"
          }
        }
      ],
      "short_name": "AnimationGraphHandle",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "bevy_animation::graph::ThreadedAnimationGraph": {
      "additionalProperties": false,
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_animation::graph::ThreadedAnimationGraph",
      "properties": {
        "computed_masks": {
          "type": {
            "$ref": "#/$defs/alloc::vec::Vec<u64>"
          }
        },
        "sorted_edge_ranges": {
          "type": {
            "$ref": "#/$defs/alloc::vec::Vec<core::ops::Range<u32>>"
          }
        },
        "sorted_edges": {
          "type": {
            "$ref": "#/$defs/alloc::vec::Vec<petgraph::graph::NodeIndex>"
          }
        },
        "threaded_graph": {
          "type": {
            "$ref": "#/$defs/alloc::vec::Vec<petgraph::graph::NodeIndex>"
          }
        }
      },
      "required": [
        "threaded_graph",
        "sorted_edge_ranges",
        "sorted_edges",
        "computed_masks"
      ],
      "short_name": "ThreadedAnimationGraph",
      "type": "object",
      "typeInfo": "Struct"
    },
    "bevy_animation::graph::ThreadedAnimationGraphs": {
      "isComponent": false,
      "isResource": false,
      "items": false,
      "long_name": "bevy_animation::graph::ThreadedAnimationGraphs",
      "prefixItems": [
        {
          "type": {
            "$ref": "#/$defs/bevy_utils::hashbrown::HashMap<bevy_asset::id::AssetId<bevy_animation::graph::AnimationGraph>, bevy_animation::graph::ThreadedAnimationGraph, bevy_utils::hashbrown::hash_map::DefaultHashBuilder>"
          }
        }
      ],
      "short_name": "ThreadedAnimationGraphs",
      "type": "array",
      "typeInfo": "TupleStruct"
    },
    "bevy_animation::transition::AnimationTransition": {
      "additionalProperties": false,
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_animation::transition::AnimationTransition",
      "properties": {
        "animation": {
          "type": {
            "$ref": "#/$defs/petgraph::graph::NodeIndex"
          }
        },
        "current_weight": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        },
        "weight_decline_per_sec": {
          "type": {
            "$ref": "#/$defs/f32"
          }
        }
      },
      "required": [
        "current_weight",
        "weight_decline_per_sec",
        "animation"
      ],
      "short_name": "AnimationTransition",
      "type": "object",
      "typeInfo": "Struct"
    },
    "bevy_animation::transition::AnimationTransitions": {
      "additionalProperties": false,
      "isComponent": true,
      "isResource": false,
      "long_name": "bevy_animation::transition::AnimationTransitions",
      "properties": {
        "main_animation": {
          "type": {
            "$ref": "#/$defs/core::option::Option<petgraph::graph::NodeIndex>"
          }
        },
        "transitions": {
          "type": {
            "$ref": "#/$defs/alloc::vec::Vec<bevy_animation::transition::AnimationTransition>"
          }
        }
      },
      "required": [
        "transitions"
      ],
      "short_name": "AnimationTransitions",
      "type": "object",
      "typeInfo": "Struct"
    },
    "bevy_asset::assets::AssetIndex": {
      "additionalProperties": false,
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::assets::AssetIndex",
      "properties": {
        "generation": {
          "type": {
            "$ref": "#/$defs/u32"
          }
        },
        "index": {
          "type": {
            "$ref": "#/$defs/u32"
          }
        }
      },
      "required": [
        "generation",
        "index"
      ],
      "short_name": "AssetIndex",
      "type": "object",
      "typeInfo": "Struct"
    },
    "bevy_asset::handle::Handle<()>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::handle::Handle<()>",
      "oneOf": [
        {
          "items": false,
          "long_name": "Strong",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/alloc::sync::Arc<bevy_asset::handle::StrongHandle>"
              }
            }
          ],
          "short_name": "Strong",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "items": false,
          "long_name": "Weak",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/bevy_asset::id::AssetId<()>"
              }
            }
          ],
          "short_name": "Weak",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "Handle<()>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::handle::Handle<bevy_animation::AnimationClip>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::handle::Handle<bevy_animation::AnimationClip>",
      "oneOf": [
        {
          "items": false,
          "long_name": "Strong",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/alloc::sync::Arc<bevy_asset::handle::StrongHandle>"
              }
            }
          ],
          "short_name": "Strong",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "items": false,
          "long_name": "Weak",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/bevy_asset::id::AssetId<bevy_animation::AnimationClip>"
              }
            }
          ],
          "short_name": "Weak",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "Handle<AnimationClip>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::handle::Handle<bevy_animation::graph::AnimationGraph>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::handle::Handle<bevy_animation::graph::AnimationGraph>",
      "oneOf": [
        {
          "items": false,
          "long_name": "Strong",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/alloc::sync::Arc<bevy_asset::handle::StrongHandle>"
              }
            }
          ],
          "short_name": "Strong",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "items": false,
          "long_name": "Weak",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/bevy_asset::id::AssetId<bevy_animation::graph::AnimationGraph>"
              }
            }
          ],
          "short_name": "Weak",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "Handle<AnimationGraph>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::handle::Handle<bevy_asset::assets::LoadedUntypedAsset>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::handle::Handle<bevy_asset::assets::LoadedUntypedAsset>",
      "oneOf": [
        {
          "items": false,
          "long_name": "Strong",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/alloc::sync::Arc<bevy_asset::handle::StrongHandle>"
              }
            }
          ],
          "short_name": "Strong",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "items": false,
          "long_name": "Weak",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/bevy_asset::id::AssetId<bevy_asset::assets::LoadedUntypedAsset>"
              }
            }
          ],
          "short_name": "Weak",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "Handle<LoadedUntypedAsset>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::handle::Handle<bevy_asset::folder::LoadedFolder>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::handle::Handle<bevy_asset::folder::LoadedFolder>",
      "oneOf": [
        {
          "items": false,
          "long_name": "Strong",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/alloc::sync::Arc<bevy_asset::handle::StrongHandle>"
              }
            }
          ],
          "short_name": "Strong",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "items": false,
          "long_name": "Weak",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/bevy_asset::id::AssetId<bevy_asset::folder::LoadedFolder>"
              }
            }
          ],
          "short_name": "Weak",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "Handle<LoadedFolder>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::handle::Handle<bevy_audio::audio_source::AudioSource>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::handle::Handle<bevy_audio::audio_source::AudioSource>",
      "oneOf": [
        {
          "items": false,
          "long_name": "Strong",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/alloc::sync::Arc<bevy_asset::handle::StrongHandle>"
              }
            }
          ],
          "short_name": "Strong",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "items": false,
          "long_name": "Weak",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/bevy_asset::id::AssetId<bevy_audio::audio_source::AudioSource>"
              }
            }
          ],
          "short_name": "Weak",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "Handle<AudioSource>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::handle::Handle<bevy_audio::pitch::Pitch>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::handle::Handle<bevy_audio::pitch::Pitch>",
      "oneOf": [
        {
          "items": false,
          "long_name": "Strong",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/alloc::sync::Arc<bevy_asset::handle::StrongHandle>"
              }
            }
          ],
          "short_name": "Strong",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "items": false,
          "long_name": "Weak",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/bevy_asset::id::AssetId<bevy_audio::pitch::Pitch>"
              }
            }
          ],
          "short_name": "Weak",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "Handle<Pitch>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::handle::Handle<bevy_gizmos::LineGizmo>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::handle::Handle<bevy_gizmos::LineGizmo>",
      "oneOf": [
        {
          "items": false,
          "long_name": "Strong",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/alloc::sync::Arc<bevy_asset::handle::StrongHandle>"
              }
            }
          ],
          "short_name": "Strong",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "items": false,
          "long_name": "Weak",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/bevy_asset::id::AssetId<bevy_gizmos::LineGizmo>"
              }
            }
          ],
          "short_name": "Weak",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "Handle<LineGizmo>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::handle::Handle<bevy_gltf::Gltf>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::handle::Handle<bevy_gltf::Gltf>",
      "oneOf": [
        {
          "items": false,
          "long_name": "Strong",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/alloc::sync::Arc<bevy_asset::handle::StrongHandle>"
              }
            }
          ],
          "short_name": "Strong",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "items": false,
          "long_name": "Weak",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/bevy_asset::id::AssetId<bevy_gltf::Gltf>"
              }
            }
          ],
          "short_name": "Weak",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "Handle<Gltf>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::handle::Handle<bevy_gltf::GltfMesh>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::handle::Handle<bevy_gltf::GltfMesh>",
      "oneOf": [
        {
          "items": false,
          "long_name": "Strong",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/alloc::sync::Arc<bevy_asset::handle::StrongHandle>"
              }
            }
          ],
          "short_name": "Strong",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "items": false,
          "long_name": "Weak",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/bevy_asset::id::AssetId<bevy_gltf::GltfMesh>"
              }
            }
          ],
          "short_name": "Weak",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "Handle<GltfMesh>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::handle::Handle<bevy_gltf::GltfNode>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::handle::Handle<bevy_gltf::GltfNode>",
      "oneOf": [
        {
          "items": false,
          "long_name": "Strong",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/alloc::sync::Arc<bevy_asset::handle::StrongHandle>"
              }
            }
          ],
          "short_name": "Strong",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "items": false,
          "long_name": "Weak",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/bevy_asset::id::AssetId<bevy_gltf::GltfNode>"
              }
            }
          ],
          "short_name": "Weak",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "Handle<GltfNode>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::handle::Handle<bevy_gltf::GltfPrimitive>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::handle::Handle<bevy_gltf::GltfPrimitive>",
      "oneOf": [
        {
          "items": false,
          "long_name": "Strong",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/alloc::sync::Arc<bevy_asset::handle::StrongHandle>"
              }
            }
          ],
          "short_name": "Strong",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "items": false,
          "long_name": "Weak",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/bevy_asset::id::AssetId<bevy_gltf::GltfPrimitive>"
              }
            }
          ],
          "short_name": "Weak",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "Handle<GltfPrimitive>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::handle::Handle<bevy_gltf::GltfSkin>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::handle::Handle<bevy_gltf::GltfSkin>",
      "oneOf": [
        {
          "items": false,
          "long_name": "Strong",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/alloc::sync::Arc<bevy_asset::handle::StrongHandle>"
              }
            }
          ],
          "short_name": "Strong",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "items": false,
          "long_name": "Weak",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/bevy_asset::id::AssetId<bevy_gltf::GltfSkin>"
              }
            }
          ],
          "short_name": "Weak",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "Handle<GltfSkin>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::handle::Handle<bevy_image::image::Image>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::handle::Handle<bevy_image::image::Image>",
      "oneOf": [
        {
          "items": false,
          "long_name": "Strong",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/alloc::sync::Arc<bevy_asset::handle::StrongHandle>"
              }
            }
          ],
          "short_name": "Strong",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "items": false,
          "long_name": "Weak",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/bevy_asset::id::AssetId<bevy_image::image::Image>"
              }
            }
          ],
          "short_name": "Weak",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "Handle<Image>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::handle::Handle<bevy_mesh::mesh::Mesh>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::handle::Handle<bevy_mesh::mesh::Mesh>",
      "oneOf": [
        {
          "items": false,
          "long_name": "Strong",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/alloc::sync::Arc<bevy_asset::handle::StrongHandle>"
              }
            }
          ],
          "short_name": "Strong",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "items": false,
          "long_name": "Weak",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/bevy_asset::id::AssetId<bevy_mesh::mesh::Mesh>"
              }
            }
          ],
          "short_name": "Weak",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "Handle<Mesh>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::handle::Handle<bevy_mesh::skinning::SkinnedMeshInverseBindposes>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::handle::Handle<bevy_mesh::skinning::SkinnedMeshInverseBindposes>",
      "oneOf": [
        {
          "items": false,
          "long_name": "Strong",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/alloc::sync::Arc<bevy_asset::handle::StrongHandle>"
              }
            }
          ],
          "short_name": "Strong",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "items": false,
          "long_name": "Weak",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/bevy_asset::id::AssetId<bevy_mesh::skinning::SkinnedMeshInverseBindposes>"
              }
            }
          ],
          "short_name": "Weak",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "Handle<SkinnedMeshInverseBindposes>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::handle::Handle<bevy_pbr::pbr_material::StandardMaterial>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::handle::Handle<bevy_pbr::pbr_material::StandardMaterial>",
      "oneOf": [
        {
          "items": false,
          "long_name": "Strong",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/alloc::sync::Arc<bevy_asset::handle::StrongHandle>"
              }
            }
          ],
          "short_name": "Strong",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "items": false,
          "long_name": "Weak",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/bevy_asset::id::AssetId<bevy_pbr::pbr_material::StandardMaterial>"
              }
            }
          ],
          "short_name": "Weak",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "Handle<StandardMaterial>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::handle::Handle<bevy_render::render_resource::shader::Shader>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::handle::Handle<bevy_render::render_resource::shader::Shader>",
      "oneOf": [
        {
          "items": false,
          "long_name": "Strong",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/alloc::sync::Arc<bevy_asset::handle::StrongHandle>"
              }
            }
          ],
          "short_name": "Strong",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "items": false,
          "long_name": "Weak",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/bevy_asset::id::AssetId<bevy_render::render_resource::shader::Shader>"
              }
            }
          ],
          "short_name": "Weak",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "Handle<Shader>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::handle::Handle<bevy_render::storage::ShaderStorageBuffer>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::handle::Handle<bevy_render::storage::ShaderStorageBuffer>",
      "oneOf": [
        {
          "items": false,
          "long_name": "Strong",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/alloc::sync::Arc<bevy_asset::handle::StrongHandle>"
              }
            }
          ],
          "short_name": "Strong",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "items": false,
          "long_name": "Weak",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/bevy_asset::id::AssetId<bevy_render::storage::ShaderStorageBuffer>"
              }
            }
          ],
          "short_name": "Weak",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "Handle<ShaderStorageBuffer>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::handle::Handle<bevy_scene::dynamic_scene::DynamicScene>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::handle::Handle<bevy_scene::dynamic_scene::DynamicScene>",
      "oneOf": [
        {
          "items": false,
          "long_name": "Strong",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/alloc::sync::Arc<bevy_asset::handle::StrongHandle>"
              }
            }
          ],
          "short_name": "Strong",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "items": false,
          "long_name": "Weak",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/bevy_asset::id::AssetId<bevy_scene::dynamic_scene::DynamicScene>"
              }
            }
          ],
          "short_name": "Weak",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "Handle<DynamicScene>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::handle::Handle<bevy_scene::scene::Scene>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::handle::Handle<bevy_scene::scene::Scene>",
      "oneOf": [
        {
          "items": false,
          "long_name": "Strong",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/alloc::sync::Arc<bevy_asset::handle::StrongHandle>"
              }
            }
          ],
          "short_name": "Strong",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "items": false,
          "long_name": "Weak",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/bevy_asset::id::AssetId<bevy_scene::scene::Scene>"
              }
            }
          ],
          "short_name": "Weak",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "Handle<Scene>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::handle::Handle<bevy_sprite::mesh2d::color_material::ColorMaterial>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::handle::Handle<bevy_sprite::mesh2d::color_material::ColorMaterial>",
      "oneOf": [
        {
          "items": false,
          "long_name": "Strong",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/alloc::sync::Arc<bevy_asset::handle::StrongHandle>"
              }
            }
          ],
          "short_name": "Strong",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "items": false,
          "long_name": "Weak",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/bevy_asset::id::AssetId<bevy_sprite::mesh2d::color_material::ColorMaterial>"
              }
            }
          ],
          "short_name": "Weak",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "Handle<ColorMaterial>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::handle::Handle<bevy_sprite::texture_atlas::TextureAtlasLayout>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::handle::Handle<bevy_sprite::texture_atlas::TextureAtlasLayout>",
      "oneOf": [
        {
          "items": false,
          "long_name": "Strong",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/alloc::sync::Arc<bevy_asset::handle::StrongHandle>"
              }
            }
          ],
          "short_name": "Strong",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "items": false,
          "long_name": "Weak",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/bevy_asset::id::AssetId<bevy_sprite::texture_atlas::TextureAtlasLayout>"
              }
            }
          ],
          "short_name": "Weak",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "Handle<TextureAtlasLayout>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::handle::Handle<bevy_text::font::Font>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::handle::Handle<bevy_text::font::Font>",
      "oneOf": [
        {
          "items": false,
          "long_name": "Strong",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/alloc::sync::Arc<bevy_asset::handle::StrongHandle>"
              }
            }
          ],
          "short_name": "Strong",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "items": false,
          "long_name": "Weak",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/bevy_asset::id::AssetId<bevy_text::font::Font>"
              }
            }
          ],
          "short_name": "Weak",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "Handle<Font>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::handle::Handle<blenvy::blueprints::assets::BlueprintPreloadAssets>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::handle::Handle<blenvy::blueprints::assets::BlueprintPreloadAssets>",
      "oneOf": [
        {
          "items": false,
          "long_name": "Strong",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/alloc::sync::Arc<bevy_asset::handle::StrongHandle>"
              }
            }
          ],
          "short_name": "Strong",
          "type": "array",
          "typeInfo": "Tuple"
        },
        {
          "items": false,
          "long_name": "Weak",
          "prefixItems": [
            {
              "type": {
                "$ref": "#/$defs/bevy_asset::id::AssetId<blenvy::blueprints::assets::BlueprintPreloadAssets>"
              }
            }
          ],
          "short_name": "Weak",
          "type": "array",
          "typeInfo": "Tuple"
        }
      ],
      "short_name": "Handle<BlueprintPreloadAssets>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::id::AssetId<()>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::id::AssetId<()>",
      "oneOf": [
        {
          "additionalProperties": false,
          "long_name": "Index",
          "properties": {
            "index": {
              "long_name": "index",
              "type": {
                "$ref": "#/$defs/bevy_asset::assets::AssetIndex"
              }
            }
          },
          "required": [
            "index"
          ],
          "short_name": "Index",
          "type": "object",
          "typeInfo": "Struct"
        },
        {
          "additionalProperties": false,
          "long_name": "Uuid",
          "properties": {
            "uuid": {
              "long_name": "uuid",
              "type": {
                "$ref": "#/$defs/uuid::Uuid"
              }
            }
          },
          "required": [
            "uuid"
          ],
          "short_name": "Uuid",
          "type": "object",
          "typeInfo": "Struct"
        }
      ],
      "short_name": "AssetId<()>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::id::AssetId<bevy_animation::AnimationClip>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::id::AssetId<bevy_animation::AnimationClip>",
      "oneOf": [
        {
          "additionalProperties": false,
          "long_name": "Index",
          "properties": {
            "index": {
              "long_name": "index",
              "type": {
                "$ref": "#/$defs/bevy_asset::assets::AssetIndex"
              }
            }
          },
          "required": [
            "index"
          ],
          "short_name": "Index",
          "type": "object",
          "typeInfo": "Struct"
        },
        {
          "additionalProperties": false,
          "long_name": "Uuid",
          "properties": {
            "uuid": {
              "long_name": "uuid",
              "type": {
                "$ref": "#/$defs/uuid::Uuid"
              }
            }
          },
          "required": [
            "uuid"
          ],
          "short_name": "Uuid",
          "type": "object",
          "typeInfo": "Struct"
        }
      ],
      "short_name": "AssetId<AnimationClip>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::id::AssetId<bevy_animation::graph::AnimationGraph>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::id::AssetId<bevy_animation::graph::AnimationGraph>",
      "oneOf": [
        {
          "additionalProperties": false,
          "long_name": "Index",
          "properties": {
            "index": {
              "long_name": "index",
              "type": {
                "$ref": "#/$defs/bevy_asset::assets::AssetIndex"
              }
            }
          },
          "required": [
            "index"
          ],
          "short_name": "Index",
          "type": "object",
          "typeInfo": "Struct"
        },
        {
          "additionalProperties": false,
          "long_name": "Uuid",
          "properties": {
            "uuid": {
              "long_name": "uuid",
              "type": {
                "$ref": "#/$defs/uuid::Uuid"
              }
            }
          },
          "required": [
            "uuid"
          ],
          "short_name": "Uuid",
          "type": "object",
          "typeInfo": "Struct"
        }
      ],
      "short_name": "AssetId<AnimationGraph>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::id::AssetId<bevy_asset::assets::LoadedUntypedAsset>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::id::AssetId<bevy_asset::assets::LoadedUntypedAsset>",
      "oneOf": [
        {
          "additionalProperties": false,
          "long_name": "Index",
          "properties": {
            "index": {
              "long_name": "index",
              "type": {
                "$ref": "#/$defs/bevy_asset::assets::AssetIndex"
              }
            }
          },
          "required": [
            "index"
          ],
          "short_name": "Index",
          "type": "object",
          "typeInfo": "Struct"
        },
        {
          "additionalProperties": false,
          "long_name": "Uuid",
          "properties": {
            "uuid": {
              "long_name": "uuid",
              "type": {
                "$ref": "#/$defs/uuid::Uuid"
              }
            }
          },
          "required": [
            "uuid"
          ],
          "short_name": "Uuid",
          "type": "object",
          "typeInfo": "Struct"
        }
      ],
      "short_name": "AssetId<LoadedUntypedAsset>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::id::AssetId<bevy_asset::folder::LoadedFolder>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::id::AssetId<bevy_asset::folder::LoadedFolder>",
      "oneOf": [
        {
          "additionalProperties": false,
          "long_name": "Index",
          "properties": {
            "index": {
              "long_name": "index",
              "type": {
                "$ref": "#/$defs/bevy_asset::assets::AssetIndex"
              }
            }
          },
          "required": [
            "index"
          ],
          "short_name": "Index",
          "type": "object",
          "typeInfo": "Struct"
        },
        {
          "additionalProperties": false,
          "long_name": "Uuid",
          "properties": {
            "uuid": {
              "long_name": "uuid",
              "type": {
                "$ref": "#/$defs/uuid::Uuid"
              }
            }
          },
          "required": [
            "uuid"
          ],
          "short_name": "Uuid",
          "type": "object",
          "typeInfo": "Struct"
        }
      ],
      "short_name": "AssetId<LoadedFolder>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::id::AssetId<bevy_audio::audio_source::AudioSource>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::id::AssetId<bevy_audio::audio_source::AudioSource>",
      "oneOf": [
        {
          "additionalProperties": false,
          "long_name": "Index",
          "properties": {
            "index": {
              "long_name": "index",
              "type": {
                "$ref": "#/$defs/bevy_asset::assets::AssetIndex"
              }
            }
          },
          "required": [
            "index"
          ],
          "short_name": "Index",
          "type": "object",
          "typeInfo": "Struct"
        },
        {
          "additionalProperties": false,
          "long_name": "Uuid",
          "properties": {
            "uuid": {
              "long_name": "uuid",
              "type": {
                "$ref": "#/$defs/uuid::Uuid"
              }
            }
          },
          "required": [
            "uuid"
          ],
          "short_name": "Uuid",
          "type": "object",
          "typeInfo": "Struct"
        }
      ],
      "short_name": "AssetId<AudioSource>",
      "type": "object",
      "typeInfo": "Enum"
    },
    "bevy_asset::id::AssetId<bevy_audio::pitch::Pitch>": {
      "isComponent": false,
      "isResource": false,
      "long_name": "bevy_asset::id::AssetId<bevy_audio::pitch::Pitch>",
      "oneOf": [
        {
          "additionalProperties": false